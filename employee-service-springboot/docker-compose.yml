# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

# Define services
services:
  # App backend service
  employee-service-springboot:
    # Configuration for building the docker image for the backend service
    build:
      context: employee-service-app:1.0 # Use an image built from the specified dockerfile in the `employee-service-springboot directory.
      dockerfile: Dockerfile
    ports:
      - "80:80" # Forward the exposed port 80 on the container to port 80 on the host machine
    restart: always
    depends_on: 
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/employeedb?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password   
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - employee-springboot-app

  # Database Service (Mysql)
  db:
    image: mysql:5.7
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: employeedb
      MYSQL_USER: employee
      MYSQL_PASSWORD: employee
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - employee-springboot-app  
  
# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  employee-springboot-app: